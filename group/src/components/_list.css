.list {
  --list-gap: var(--gap-2);

  width: 100%;
  height: max-content;
  border: var(--group-border);
  box-shadow: var(--group-shadow);
  list-style: none;

  & > .item {
    /* &:nth-child(odd) {
        background-color: var(--group-odd-bg);
      } */
    &:not(:last-child) {
      border-bottom: var(--group-border);
    }

    &.list\:divider {
      margin-bottom: -0.5em !important;
      margin-top: -0.5em !important;
    }

    & > div:not(.start, .end) > *:not(:first-child) {
      font-size: 85%;
      white-space: normal;
      overflow: inherit;
      text-overflow: inherit;
    }
  }
}

@supports not (selector(:has(*))) {
  /* for now we markup some conditional class as fallback*/
  .list {
    & > .item {
      &.list\:item\:start\:end {
        grid-template-columns: 48px 1fr 48px;
      }
      &.list\:item\:start {
        grid-template-columns: 48px 1fr;
      }
      &.list\:item\:end {
        grid-template-columns: 1fr 48px;
      }
    }
  }
}

@supports selector(:has(*)) {
  .list {
    & .item {
      & > div:only-child,
      &:has(.end) div:nth-child(1),
      &:has(.start) div:nth-child(2) {
        & > *:not(:first-child) {
          font-size: 85%;
          white-space: normal;
          overflow: inherit;
          text-overflow: inherit;
        }
      }
    }
  }
}
